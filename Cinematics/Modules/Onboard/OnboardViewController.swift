//
//  OnboardViewController.swift
//  Cinematics
//
//  Created by Nghia Nguyen on 4/10/20.
//  Copyright (c) 2020 Nghia Nguyen. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import RxCocoa
import RxSwift
import UIKit

final class OnboardViewController: BaseViewController, NavigationBarVisible {
    @IBOutlet var scrollView: UIScrollView!
    @IBOutlet var nextButton: UIButton!
    @IBOutlet var indicatorStackView: UIStackView!

    // MARK: - Public properties -

    var presenter: OnboardPresenterInterface!
    var isHideNavigationBar: Bool = true

    // MARK: - Private properties -

    private let disposeBag = DisposeBag()

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }

    @IBAction func nextButtonTapped(_ sender: Any) {
        presenter.didNextButtonTapped()
    }
}

// MARK: - Extensions -

extension OnboardViewController: OnboardViewInterface {
    func moveToNextPage(info: Onboard.ViewOutput) {
        nextButton.setImage(info.nextButtonImage, for: .normal)
        setScrollViewPage(index: info.index)
        setIndicator(index: info.index)
    }
}

private extension OnboardViewController {
    func setupView() {
        setIndicator(index: 0)
    }
    
    private func setScrollViewPage(index: Int) {
        let nextX = UIScreen.main.bounds.width * CGFloat(index)
        scrollView.setContentOffset(CGPoint(x: nextX, y: 0), animated: true)
    }
    
    private func setIndicator(index: Int) {
        indicatorStackView.arrangedSubviews.enumerated().forEach { (i, indicator) in
            (indicator as? UIImageView)?.isHighlighted = i == index
        }
    }
}
