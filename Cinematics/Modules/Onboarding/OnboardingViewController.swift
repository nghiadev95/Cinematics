//
//  OnboardingViewController.swift
//  Cinematics
//
//  Created by Nghia Nguyen on 5/31/20.
//  Copyright (c) 2020 Nghia Nguyen. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import RxCocoa
import RxSwift
import UIKit

final class OnboardingViewController: BaseViewController, NavigationBarVisible {
    // MARK: - Public properties -

    @IBOutlet var scrollView: UIScrollView!
    @IBOutlet var nextButton: UIButton!
    @IBOutlet var indicatorStackView: UIStackView!
    var presenter: OnboardingPresenterInterface!
    var isHideNavigationBar: Bool = true

    // MARK: - Private properties -

    private let disposeBag = DisposeBag()

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }
}

// MARK: - Extensions -

extension OnboardingViewController: OnboardingViewInterface {}

private extension OnboardingViewController {
    func setupView() {
        let output = Onboarding.ViewOutput(nextAction: nextButton.rx.tap.asObservable().debug())
        let input = presenter.configure(with: output)

        disposeBag.insert([
            input.index.drive(onNext: { [weak self] index in
                self?.setIndicator(index: index)
                self?.setScrollViewPage(index: index)
            }),

            input.nextButtonImage.drive(nextButton.rx.image())
        ])
    }

    private func setScrollViewPage(index: Int) {
        let nextX = UIScreen.main.bounds.width * CGFloat(index)
        scrollView.setContentOffset(CGPoint(x: nextX, y: 0), animated: true)
    }

    private func setIndicator(index: Int) {
        indicatorStackView.arrangedSubviews.enumerated().forEach { i, indicator in
            (indicator as? UIImageView)?.isHighlighted = i == index
        }
    }
}
