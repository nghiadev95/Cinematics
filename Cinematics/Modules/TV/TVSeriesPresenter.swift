//
//  TVSeriesPresenter.swift
//  Cinematics
//
//  Created by Nghia Nguyen on 5/31/20.
//  Copyright (c) 2020 Nghia Nguyen. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import RxSwift
import RxCocoa

final class TVSeriesPresenter {

    // MARK: - Private properties -

    private unowned let view: TVSeriesViewInterface
    private let formatter: TVSeriesFormatterInterface
    private let interactor: TVSeriesInteractorInterface
    private let wireframe: TVSeriesWireframeInterface

    // MARK: - Lifecycle -

    init(view: TVSeriesViewInterface, formatter: TVSeriesFormatterInterface, interactor: TVSeriesInteractorInterface, wireframe: TVSeriesWireframeInterface) {
        self.view = view
        self.formatter = formatter
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension TVSeriesPresenter: TVSeriesPresenterInterface {

    func configure(with output: TVSeries.ViewOutput) -> TVSeries.ViewInput {

        let formatterInput = TVSeries.FormatterInput()

        let formatterOutput = formatter.format(for: formatterInput)

        return TVSeries.ViewInput(models: formatterOutput)
    }

}
